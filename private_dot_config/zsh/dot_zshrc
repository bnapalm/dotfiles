# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source ${XDG_CONFIG_HOME}/zsh/alias

[[ ! -d ${HOME}/.yarn/bin ]] || path+=${HOME}/.yarn/bin
fpath+=${XDG_CONFIG_HOME}/zsh/plugins

setopt HIST_IGNORE_SPACE

# Directory stack
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT

# Auto-Completion
autoload -U compinit; compinit
zmodload zsh/complist

# General completion
source ${XDG_CONFIG_HOME}/zsh/completion.zsh

# back-dir
autoload -Uz bd; bd 

# vim mode
bindkey -v
export KEYTIMEOUT=1

# fzf
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

# PowerLevel10k prompt
# https://github.com/romkatv/powerlevel10k
# Note to self: Remove first line afterwards
[[ ! -f ${HOME}/src/vendor/powerlevel10k/powerlevel10k.zsh-theme ]] || \
source ${HOME}/src/vendor/powerlevel10k/powerlevel10k.zsh-theme
[[ ! -f /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme ]] || \
source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh

# This should be at the end of file
[[ ! -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] || \
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ ! -f /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh ]] || \
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

czd () {
  cd $(chezmoi source-path)
}

# colorize go test
gtst() {
  go test $* | sed ''/PASS/s//$(printf "\033[32mPASS\033[0m")/'' | sed ''/SKIP/s//$(printf "\033[34mSKIP\033[0m")/'' | sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/'' | sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/'' | GREP_COLORS="mt=01;33" grep -E --color=always '\s*[a-zA-Z0-9\-_.]+[:][0-9]+[:]|^'
}

# kubectl get ingressroutes with all rules
kgirf() {
  k get ingressroute -o jsonpath='{range .items[*]}{.metadata.name}{range .spec.routes[*]}{"\t"}{.match}{"\n"}{end}{"\n"}{end}'
}
